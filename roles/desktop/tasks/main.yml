---
- name: Check if gdm is installed
  command: pacman -Q gdm
  register: gdm_installed
  failed_when: no
  changed_when: no

- name: Check if gnome is installed
  command: pacman -Q gnome
  register: gnome_installed
  failed_when: no
  changed_when: no

- name: install the desktop environment
  pacman:
    name: gdm gnome
  when: gdm_installed.rc != 0 or gnome_installed.rc != 0

- name: prevent sleep at login screen
  shell: unset XDG_RUNTIME_DIR; dbus-launch gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type nothing
  become: yes
  become_user: gdm

- name: screensaver does not activate
  replace:
    path: /usr/share/glib-2.0/schemas/org.gnome.desktop.screensaver.gschema.xml
    after: 'name="idle-activation-enabled"'
    regexp: 'true'
    replace: "false"
    before: '<summary>Activate when idle'
  register: screensaver
    
- name: disable screen locking
  replace:
    path: /usr/share/glib-2.0/schemas/org.gnome.desktop.screensaver.gschema.xml
    after: 'name="lock-enabled"'
    regexp: 'true'
    replace: "false"
    before: '<summary>Lock on activation'
  register: screenlocker

- name: disable screen idling
  replace:
    path: /usr/share/glib-2.0/schemas/org.gnome.desktop.session.gschema.xml
    after: 'name="idle-delay"'
    regexp: '300'
    replace: "0"
    before: '<summary\>Time before session is considered idle'
  register: screenidle

- name: disable machine sleeping
  replace:
    path: /usr/share/glib-2.0/schemas/org.gnome.settings-daemon.plugins.power.gschema.xml
    after: 'name="sleep-inactive-battery-timeout"'
    regexp: '1200'
    replace: "0"
    before: '<summary\>Sleep timeout computer when on AC'
  register: sleep

- name: compile schemas
  command: glib-compile-schemas .
  args:
    chdir: /usr/share/glib-2.0/schemas
  when: screensaver.changed or screenlocker.changed or screenidle.changed or sleep.changed

- name: make autologin group
  group:
    name: autologin
    system: yes
    state: present

- name: make nopasswdlogin group
  group:
    name: nopasswdlogin
    system: yes
    state: present

- name: enable pam gdm to validate nopasswdlogin group
  lineinfile:
    path: /etc/pam.d/gdm-password
    line: auth sufficient pam_succeed_if.so user ingroup nopasswdlogin
    insertbefore: BOF

- name: Determine available users
  getent:
    database: passwd
  
- name: Check if accountsservice is installed
  command: pacman -Q accountsservice
  register: accountsservice_installed
  failed_when: no
  changed_when: no

- name: vagrant user not on login page
  copy:
    dest: /var/lib/AccountsService/users/vagrant
    group: root
    owner: root
    mode: 600
    content: |
      [User]
      XSession=gnome
      SystemAccount=true
  when: accountsservice_installed.rc == 0 and "'vagrant' in getent_passwd"
  # only when the vagrant user exists and accountsservice is here

- name: enable gdm service
  systemd:
    name: gdm
    enabled: yes
    masked: no

#- name: enable NetworkManager service
#  systemd:
#    name: NetworkManager
#    enabled: yes
#    masked: no

#- name: NetworkManager ignores vagrant's device
#  copy:
#    dest: /etc/NetworkManager/conf.d/unmanaged.conf
#    content: |
#      [keyfile]
#      unmanaged-devices=interface-name:eth0
#  when: ("/vagrant" is directory)

#- name: NetworkManager owns eth1
#  file:
#    state: absent
#    path: /etc/systemd/network/eth1.network
#  when: ("/vagrant" is directory)
