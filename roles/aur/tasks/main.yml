---
- name: install git and base devel group and go for yay
  pacman:
    name: base-devel git go

- name: make aur group
  group:
    name: aur
    system: yes
    state: present

- name: make aur_builder user
  user:
    name: aur_builder
    groups: wheel,aur
    system: yes

- name: give aur_builder install perms
  lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: yes
    validate: 'visudo -cf %s'

- name: make pkgdest
  file:
    path: /var/cache/makepkg/pkg
    state: directory
    group: aur
    mode: 0775

- name: set pkgdest
  lineinfile:
    path: /etc/makepkg.conf
    regexp: '^#PKGDEST='
    line: PKGDEST=/var/cache/makepkg/pkg

- name: build zst
  lineinfile:
    path: /etc/makepkg.conf
    regexp: '^PKGEXT='
    line: PKGEXT='.pkg.tar.zst'

- name: Check if ansible aur module is installed
  command: pacman -Q ansible-aur-git
  register: ansible_aur_module_installed
  failed_when: no
  changed_when: no

- name: clone ansible-aur-git repo from the AUR
  git:
    repo: 'https://aur.archlinux.org/ansible-aur-git.git'
    dest: /home/aur_builder/ansible-aur-git
    force: yes
  when: ansible_aur_module_installed.rc != 0 # run this step when it's not installed
  become: yes
  become_user: aur_builder

- name: build and install ansible AUR module
  command: "makepkg -Cfi --noconfirm"
  args:
    chdir: /home/aur_builder/ansible-aur-git
  become: yes
  become_user: aur_builder
  when: ansible_aur_module_installed.rc != 0 # run this step when it's not installed
  
- name: ansible AUR module cleanup
  file:
    path: /home/aur_builder/ansible-aur-git
    state: absent

- name: install yay
  aur: name=yay use=makepkg state=present
  become: yes
  become_user: aur_builder

- name: upgrade aur packages
  aur: upgrade=yes use=yay aur_only=yes
